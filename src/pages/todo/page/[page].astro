---
/* src/pages/todo/page/[page].astro */
import Site from "../../../layouts/Site.astro";
import { getJson } from "../../../lib/fetchJson";

const PER_PAGE = 8;

type Row = {
  slug?: string;
  title?: string;
};

// Build-time paths for /todo/page/[n]
export async function getStaticPaths() {
  // ✅ Read env *inside* the function to avoid scope/order problems
  const DATA_URL = import.meta.env.PUBLIC_TODO_JSON ?? "";

  if (!DATA_URL) {
    // Graceful fallback: at least one route so the site builds
    return [
      {
        params: { page: "1" },
        props: { rows: [], currentPage: 1, totalPages: 1, noData: true },
      },
    ];
  }

  const raw = await getJson(DATA_URL);
  const rows: Row[] =
    Array.isArray(raw) ? raw :
    Array.isArray(raw?.data) ? raw.data :
    Array.isArray(raw?.rows) ? raw.rows :
    [];

  const totalPages = Math.max(1, Math.ceil(rows.length / PER_PAGE));

  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: String(i + 1) },
    props: {
      rows,
      currentPage: i + 1,
      totalPages,
      noData: rows.length === 0,
    },
  }));
}

const { rows = [], currentPage = 1, totalPages = 1, noData = false } = Astro.props;
const start = (currentPage - 1) * PER_PAGE;
const end = start + PER_PAGE;
let pageItems: (Row & { isCTA?: boolean })[] = rows.slice(start, end);

// Insert CTA card at a random position (never in the first two spots) only if we have items
if (pageItems.length > 0) {
  const minIndex = Math.min(2, Math.max(0, pageItems.length - 1));
  const maxIndex = pageItems.length;
  const randomIndex = Math.floor(Math.random() * (maxIndex - minIndex) + minIndex);
  pageItems.splice(randomIndex, 0, { isCTA: true });
}
---

<Site title={`To Do – Page ${currentPage}`}>
  <h1 class="text-3xl font-bold mb-4">To Do – Page {currentPage}</h1>

  {noData ? (
    <div class="rounded-lg border border-dashed p-6 text-center text-gray-600">
      <p class="mb-2 font-semibold">No data available</p>
      <p>Set <code>PUBLIC_TODO_JSON</code> in your <code>.env</code> and restart <code>astro dev</code>.</p>
    </div>
  ) : (
    <>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        {pageItems.map((item) =>
          item.isCTA ? (
            <div class="p-6 rounded-xl shadow bg-gradient-to-r from-blue-600 to-blue-400 text-white flex flex-col justify-center items-center text-center">
              <h2 class="text-2xl font-bold mb-2">Don’t Miss Out!</h2>
              <p class="mb-4 max-w-prose">
                Explore Fernie activities and see what’s new on the real estate front—local insights, fresh listings,
                and tips for finding your place.
              </p>
              <a href="/contact" class="px-4 py-2 bg-white text-blue-700 rounded-full font-semibold hover:bg-gray-100 transition">
                Contact Us
              </a>
            </div>
          ) : (
            <div class="p-4 border rounded bg-white shadow">
              <h2 class="text-xl font-semibold">{item.title}</h2>
              <p class="text-gray-600">{item.slug}</p>
            </div>
          )
        )}
      </div>

      <!-- Pagination -->
      <nav class="flex justify-center gap-2 mt-6">
        {Array.from({ length: totalPages }, (_, i) => (
          <a
            href={`/todo/page/${i + 1}`}
            class={`px-3 py-1 border rounded-full transition ${
              currentPage === i + 1 ? "bg-blue-600 text-white font-bold" : "bg-gray-100 hover:bg-gray-200"
            }`}
          >
            {i + 1}
          </a>
        ))}
      </nav>
    </>
  )}
</Site>
