---
// ‚úÖ Pre-render homepage for better performance
export const prerender = true;

import Site from "../layouts/Site.astro";
import { getJson } from "../lib/fetchJson";
import { heroPath } from "../lib/paths";

const homeUrl = import.meta.env.PUBLIC_HOME_JSON;
const listUrl = import.meta.env.PUBLIC_SHEET_JSON;

type Row = {
  slug?: string;
  title?: string;
  summary?: string;
  hero_img?: string;
  status?: string;
  seo_title?: string;
  seo_description?: string;
  cta1?: string;
  cta2?: string;
  cta3?: string;
};

let header: Row | null = null;
let allItems: Row[] = [];
let items: Row[] = [];
let error: string | null = null;

const val = (r:any,k:string)=>
  (r?.[k] ?? r?.[k?.toLowerCase?.()] ?? r?.[k?.toUpperCase?.()] ?? "").toString().trim();

const normalize = (r:any): Row => {
  const title = val(r,"title");
  const computedSlug = (title||"").toLowerCase()
    .replace(/&/g,"-and-").replace(/[^a-z0-9]+/g,"-").replace(/^-+|-+$/g,"");
  return {
    slug: val(r,"slug") || computedSlug,
    title,
    summary: val(r,"summary"),
    hero_img: val(r,"hero_img"),
    status: val(r,"status"),
    seo_title: val(r,"seo_title"),
    seo_description: val(r,"seo_description"),
    cta1: val(r,"cta1"),
    cta2: val(r,"cta2"),
    cta3: val(r,"cta3"),
  };
};

const visible = (r:any) => {
  const s = (r?.status || "").toLowerCase();
  const slug = (r?.slug || "").toLowerCase();
  return s !== "hidden" && s !== "inactive" && s !== "draft" && slug !== "index";
};

try {
  if (!homeUrl) throw new Error("Missing PUBLIC_HOME_JSON in .env for homepage content.");
  const rawHome = await getJson<any>(homeUrl);
  const homeRows:any[] =
    Array.isArray(rawHome) ? rawHome :
    Array.isArray(rawHome?.data) ? rawHome.data :
    Array.isArray(rawHome?.rows) ? rawHome.rows : [];
  header = homeRows.length ? normalize(homeRows[0]) : null;

  if (listUrl) {
    const rawList = await getJson<any>(listUrl);
    const rows:any[] =
      Array.isArray(rawList) ? rawList :
      Array.isArray(rawList?.data) ? rawList.data :
      Array.isArray(rawList?.rows) ? rawList.rows : [];
    allItems = rows.map(normalize).filter(visible);
  }
} catch (e:any) {
  error = e?.message || String(e);
}

const MAX_NEIGH_CARDS = 4;
const MUST_SLUGS = new Set(["skihill","ski-hill","fernie-ski-hill","ski-hill-condos"]);

function chooseNeighbourCards(list: Row[], max = MAX_NEIGH_CARDS): Row[] {
  if (!list.length) return [];
  const lower = (s:string)=> (s||"").toLowerCase();
  const must = list.find(r => MUST_SLUGS.has(lower(r.slug||"")) || /ski.*hill/.test(lower(r.slug||"")));
  const rest = list.filter(r => r !== must);
  const a = [...rest];
  for (let i = a.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [a[i], a[j]] = [a[j], a[i]];
  }
  const picked: Row[] = [];
  if (must) picked.push(must);
  picked.push(...a.slice(0, Math.max(0, max - picked.length)));
  return picked.slice(0, max);
}

items = chooseNeighbourCards(allItems);

const heroSrc      = header?.hero_img ? heroPath(header.hero_img) : "";
const heroH1       = header?.title || "Fernie Real Estate";
const pageSeoTitle = header?.seo_title || heroH1;
const pageSeoDesc  = header?.seo_description || header?.summary || "";

const WX_LAT = Number(import.meta.env.PUBLIC_WEATHER_LAT ?? "") || 49.463;
const WX_LON = Number(import.meta.env.PUBLIC_WEATHER_LON ?? "") || -115.090;
---

<Site showHeader={true} seo_title={pageSeoTitle} seo_description={pageSeoDesc}>

  {heroSrc && (
    <Fragment slot="head">
      <link rel="preload" as="image" href={heroSrc} fetchpriority="high" />
    </Fragment>
  )}

  <!-- HERO -->
  <section class="hero-bleed">
    {heroSrc && (
      <img
        src={heroSrc}
        alt=""
        fetchpriority="high"
        loading="eager"
        decoding="async"
        width="2000"
        height="1000"
      />
    )}
    <div class="hero-overlay">
      <h1>{heroH1}</h1>
    </div>
  </section>

  <!-- Summary under hero (full width) -->
  {header?.summary && (
    <section class="summary-wide">
      <div class="lead-under-hero">{header.summary}</div>
    </section>
  )}

  <div class="container">

    <!-- QUICK TILES -->
    <section class="section tiles">
      <a class="tile" href="/search" data-astro-prefetch="hover">
        <div class="tile-ico">üè†</div>
        <div class="tile-title">Buy in Fernie</div>
        <p>See active listings and set alerts.</p>
      </a>
      <a class="tile" href="/contact" data-astro-prefetch>
        <div class="tile-ico">üìà</div>
        <div class="tile-title">Sell with a Plan</div>
        <p>Pricing, prep, and marketing that works.</p>
      </a>
      <a class="tile" href="/neighbourhoods" data-astro-prefetch="hover">
        <div class="tile-ico">üó∫Ô∏è</div>
        <div class="tile-title">Explore Areas</div>
        <p>Compare neighbourhoods, amenities, and vibes.</p>
      </a>
    </section>

    <!-- NEW LISTINGS -->
    <section class="section">
      <div class="section-head">
        <h2>New Listings</h2>
        <a class="link" href="/search" data-astro-prefetch="hover">See all ‚Üí</a>
      </div>

      {error ? (
        <p class="error">Error: {error}</p>
      ) : header?.cta1 ? (
        <div class="listing-wrap" id="listings-panel">
          <div class="listing-skeleton" id="rv-skeleton" aria-hidden="true">
            <div class="sk-card"></div>
            <div class="sk-card"></div>
            <div class="sk-card"></div>
          </div>

          {
            /[<>]/.test(header.cta1)
              ? <Fragment set:html={header.cta1}></Fragment>
              : <div data-rv-block={header.cta1}></div>
          }
        </div>
      ) : (
        <p class="muted">
          Add your RealtyVis block ID (e.g. <code>MQP2VMLT-XXXXX</code>) or full embed snippet to <code>HOME!cta1</code>.
        </p>
      )}
    </section>

    <!-- FEATURE COPY (existing) ... -->

  </div>

<!-- üè° NEW SHIMMER HANDLER -->
<script is:inline>
  (function(){
    const sk = document.getElementById('rv-skeleton');
    const panel = document.getElementById('listings-panel');
    if (!sk || !panel) return;

    function rvMounted(root=document){
      return !!(
        root.querySelector('[data-rv-card]') ||
        root.querySelector('.rv-card') ||
        root.querySelector('.rv-root') ||
        root.querySelector('iframe[src*="realtyvis"]') ||
        root.querySelector('[data-rv-mounted]')
      );
    }

    function hideShimmer(){ try { sk.remove(); } catch {} }

    if (rvMounted(panel)) { hideShimmer(); return; }

    const mo = new MutationObserver(() => {
      if (rvMounted(panel)) { hideShimmer(); mo.disconnect(); }
    });
    mo.observe(panel, { childList: true, subtree: true });

    function rescan(){
      try {
        window.RealtyVis?.init?.();
        window.RealtyVis?.scan?.();
      } catch {}
    }
    if (document.visibilityState === 'visible') rescan();
    addEventListener('visibilitychange', ()=>{ if (!document.hidden) rescan(); });
    addEventListener('pageshow', (e)=>{ if (e.persisted) rescan(); });

    window.addEventListener?.('rv:mounted', hideShimmer, { once:true });
    document.addEventListener?.('rv:mounted', hideShimmer, { once:true });

    const TIMEOUT_MS = 12000;
    setTimeout(() => {
      if (!rvMounted(panel)) {
        hideShimmer();
        const note = document.createElement('p');
        note.className = 'rv-fallback-note';
        note.textContent = 'Listings are loading slower than usual. Please try again in a moment.';
        panel.appendChild(note);
      }
    }, TIMEOUT_MS);
  })();
</script>

<style>
  /* Full-width summary under hero */
  .summary-wide {
    max-width: none;
    width: 100%;
    background: #fff;
    padding: 32px 1rem;
    text-align: center;
  }
  .lead-under-hero { font-size: clamp(1rem, 2.4vw, 1.15rem); line-height: 1.6; color: #1f2937; max-width: 75ch; margin: 0 auto; }

  @media (prefers-reduced-motion: reduce) {
    #rv-skeleton .sk-card { animation: none !important; }
  }
  .rv-fallback-note {
    margin-top: 8px;
    font-size: .9rem;
    color: #6b7280;
  }
</style>
</Site>
