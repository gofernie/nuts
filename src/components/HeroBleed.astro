---
const {
  src = "",
  title = "",
  kicker = "",
  containerMax = 1200,
  containerPad = 12,
  flush = false,
  preload = false
} = Astro.props;
---

<section class={`hero-bleed${flush ? " hero-flush" : ""}`} style={src ? `--hero-bg:url(${src})` : ""}>
  <div class="overlay">
    <div class="inner" style={`max-width:${containerMax}px;padding-inline:${containerPad}px`}>
      {title && <h1 class="hero-title fade-in-up">{title}</h1>}
      {kicker && <p class="hero-kicker fade-in-up delay-1">{kicker}</p>}
    </div>
  </div>

  <style>
    .hero-bleed {
      position: relative;
      min-height: 58vh;
      display: flex;
      align-items: flex-end;
      background: var(--hero-bg, none) center/cover no-repeat;
      isolation: isolate;
    }
    .hero-flush { min-height: 38vh; }

    .overlay {
      width: 100%;
      background: linear-gradient(to top, rgba(0,0,0,.48), rgba(0,0,0,.20) 40%, transparent 75%);
      padding-block: clamp(16px, 4vw, 28px);
    }

    .inner { width: 100%; margin-inline: auto; }

    .hero-title {
      color: #fff;
      margin: 0;
      font-size: clamp(28px, 5vw, 48px);
      line-height: 1.08;
      text-shadow: 0 1px 10px rgba(0,0,0,.28);
    }

    .hero-kicker {
      margin: .4rem 0 0 0;
      color: #e5e7eb;
font-size: clamp(15px, 2vw, 20px);
      letter-spacing: .05em;
      text-transform: uppercase;
      opacity: .95;
      text-shadow: 0 1px 6px rgba(0,0,0,.22);
    }

    @keyframes fadeInUp {
      from { opacity: 0; transform: translateY(8px); }
      to   { opacity: 1; transform: translateY(0); }
    }
    .fade-in-up { opacity: 0; animation: fadeInUp 420ms ease-out 40ms both; }
    .delay-1 { animation-delay: 140ms; }

    @media (prefers-reduced-motion: reduce) {
      .fade-in-up, .delay-1 { animation: none !important; opacity: 1 !important; transform: none !important; }
    }
    @media (max-width: 640px) { .hero-bleed { min-height: 42vh; } }
  </style>
</section>
