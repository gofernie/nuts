---
const {
  title = "Fernie Real Estate",
  seo_title = title,
  seo_description = "",
  summary = "",
  showHeader = true,
  class: bodyClass = ""
} = Astro.props;

import { getJson } from "../lib/fetchJson";

/** ---------- shared helpers ---------- */
const RESERVED = new Set(["index","page","pages","all","view","list"]);

const getField = (r:any, k:string) =>
  (r?.[k] ?? r?.[k?.toLowerCase?.()] ?? r?.[k?.toUpperCase?.()] ?? "").toString().trim();

const visible = (r:any) => {
  const s = getField(r, "status").toLowerCase();
  const rawSlug = getField(r, "slug").toLowerCase();
  return s !== "hidden" && s !== "inactive" && rawSlug !== "index" && !RESERVED.has(rawSlug);
};

type MenuItem = { title:string; slug:string; sort:number };

async function fetchMenu(url?: string): Promise<MenuItem[]> {
  if (!url) return [];
  try {
    const raw = await getJson<any>(url);
    const rows: any[] =
      Array.isArray(raw) ? raw :
      Array.isArray(raw?.data) ? raw.data :
      Array.isArray(raw?.rows) ? raw.rows : [];

    const out: MenuItem[] = [];
    for (const r of rows) {
      if (!visible(r)) continue;
      const title = getField(r, "title");
      const s = getField(r, "slug");
      if (!title || !s) continue;
      const sort = Number.isFinite(+r?.sort) ? +r.sort : Number.MAX_SAFE_INTEGER;
      out.push({ title, slug: s, sort });
    }

    out.sort((a,b) => (a.sort - b.sort) || a.title.localeCompare(b.title));
    return out;
  } catch (e) {
    console.warn("Menu fetch failed for", url, e);
    return [];
  }
}

/** ---------- build menus ---------- */
let neighbourhoods:MenuItem[] = await fetchMenu(import.meta.env.PUBLIC_SHEET_JSON);
let typesMenu:MenuItem[]      = await fetchMenu(import.meta.env.PUBLIC_TYPES_JSON);
let xtraMenu:MenuItem[]       = await fetchMenu(import.meta.env.PUBLIC_XTRAAREA_JSON);
let todoMenu:MenuItem[]       = await fetchMenu(import.meta.env.PUBLIC_TODO_JSON);

/** ---------- helpers ---------- */
const ROWS_PER_COL = 7;
const colsFor = (n:number) => Math.min(6, Math.ceil(n / ROWS_PER_COL));

const metaDescription = (seo_description || summary || "").toString().trim();

/** ---------- Nav order ---------- */
const NAV_ORDER: Array<
  "neighbourhoods"|"types"|"xtra"|"todo"|"stay"|"search"|"contact"
> = [
  "neighbourhoods",
  "types",
  "xtra",
  "todo",
  "stay",
  "search",
  "contact",
];
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{seo_title}</title>
    {metaDescription && <meta name="description" content={metaDescription} />}

    <style>
      @media (max-width:768px){
        header nav{ display:none !important; }
        header nav.open{ display:flex !important; }
      }
    </style>

    <slot name="head" />

    <style>
      :root {
        --header-h: 52px;
        --bg:#fafaf9; --ink:#111827; --ink-muted:#1f2937; --hover-bg:rgba(243,244,246,.9);
        --hero-h:48vh; --container-pad:12px; --bleed-fix:2px;
      }
      *,*::before,*::after { box-sizing:border-box; }
      html, body { height:100%; overflow-x:clip; }
      body { margin:0; font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif; background:var(--bg); color:var(--ink); }

      header{
        position:fixed; top:0; left:0; right:0; height:var(--header-h); z-index:1000;
        background:rgba(255,255,255,.84); backdrop-filter:blur(10px); border-bottom:1px solid #e5e7eb;
      }
      .nav-inner{
        width:100%; height:100%;
        padding:0 max(16px, env(safe-area-inset-right)) 0 max(16px, env(safe-area-inset-left));
        display:flex; align-items:center; gap:10px;
      }
      .brand{ margin-right:auto; font-weight:700; font-size:1rem; color:var(--ink);
        text-decoration:none; padding:4px 6px; border-radius:6px; }
      .brand:hover{ background:var(--hover-bg); }

      nav{ margin-left:auto; display:flex; align-items:center; gap:8px; }
      nav a{ color:var(--ink-muted); padding:6px 8px; text-decoration:none; border-radius:8px; font-weight:500; }
      nav a:hover, nav a:focus-visible{ color:var(--ink); background:var(--hover-bg); }
      .hamburger{ display:none; background:none; border:none; font-size:1.5rem; cursor:pointer; color:var(--ink-muted); }

      .menu-group{ position:relative; margin:0 2px; }
      .menu-link.has-sub::after{ content:" â–¾"; opacity:.8; }

      .dropdown{
        position:absolute; left:0; top:calc(100% + 21px);
        background:rgba(255,255,255,0.9); backdrop-filter:blur(6px);
        border:1px solid rgba(229,231,235,.7); border-radius:10px; box-shadow:0 6px 20px rgba(0,0,0,.08);
        display:grid; grid-auto-flow: column;
        grid-template-rows: repeat(7, auto);
        grid-auto-columns: max-content;
        gap: 6px 12px; padding: 10px;
        width: max-content; max-width: 92vw;
        opacity:0; transform:translateY(-12px); pointer-events:none; visibility:visible;
        transition:transform .28s cubic-bezier(.2,.7,.2,1), opacity .22s ease-out;
        z-index:1100;
      }
      .dropdown.wide{ overflow-x:auto; }
      .dropdown.align-right{ left:auto; right:0; }

      .dropdown > a{ display:block; padding:8px 10px; line-height:1.35; white-space:normal;
        text-decoration:none; border-radius:6px; color:var(--ink-muted);
        transition: background .15s ease, color .15s ease, box-shadow .15s ease, transform .15s ease, font-weight .15s ease; }
      .dropdown > a:hover{ background:#fff; color:#111827; font-weight:600;
        box-shadow:0 1px 3px rgba(0,0,0,0.08); transform:translateY(-1px); }

      @media (min-width:769px){
        .menu-group::before{ content:""; position:absolute; top:100%; left:-12px; right:-12px; height:40px; pointer-events:auto; }
        .menu-group.hovering > .dropdown,
        .menu-group:hover > .dropdown,
        .menu-group:focus-within > .dropdown{ opacity:1; transform:translateY(0); pointer-events:auto; }
      }

      @media (max-width:768px){
        header nav{ position:absolute; top:var(--header-h); right:0; background:#fff;
          flex-direction:column; gap:0; padding:8px 12px; box-shadow:0 2px 8px rgba(0,0,0,.1);
          width:auto; max-width:92vw; min-width:220px; }
        header nav a{ display:block; width:100%; padding:10px; }
        .hamburger{ display:block; margin-left:auto; }
        .menu-group{ width:100%; }
        .menu-group > .dropdown{ position:static; background:#fff; box-shadow:none; border:0; padding:0 0 4px 0;
          display:block; overflow:hidden; max-height:0; transition:max-height .28s ease;
          opacity:1; transform:none; pointer-events:auto; }
        .menu-group.expanded > .dropdown{ max-height:480px; overflow:auto; }
      }

      main{ margin:0; padding:0; }

      footer.site-footer{ width:100%; background:rgba(255,255,255,0.9); backdrop-filter:blur(6px);
        border-top:1px solid #e5e7eb; padding:1rem 0; margin-top:3rem; text-align:center; font-size:.875rem; color:#4b5563; }
      footer.site-footer .container{ max-width:1200px; margin-inline:auto; padding-inline:var(--container-pad); }
      footer.site-footer .footer-links{ margin-top:.5rem; display:flex; justify-content:center; gap:1rem; flex-wrap:wrap; font-size:.8rem; }
      footer.site-footer .footer-links a{ color:#4b5563; text-decoration:none; }
      footer.site-footer .footer-links a:hover{ text-decoration:underline; }
    </style>

    <style is:global>
      html { scroll-behavior: smooth; }
      :target { scroll-margin-top: calc(var(--header-h) + 12px); }
      .hero-bleed{ position:relative; left:50%; right:50%; width:calc(100vw + var(--bleed-fix)*2);
        margin-left:calc(-50vw - var(--bleed-fix)); margin-right:calc(-50vw - var(--bleed-fix));
        min-height:var(--hero-h); padding-top:var(--header-h);
        background-color:#e5e7eb; border-bottom:1px solid #eee; overflow:hidden; }
      .hero-bleed>img{ position:absolute; inset:0; width:100%; height:100%; object-fit:cover; }
      .container{ max-width:1200px; margin-inline:auto; padding-inline:var(--container-pad); }
    </style>

    <script is:inline>
      function toggleNav(){
        const nav=document.querySelector("header nav");
        const btn=document.querySelector(".hamburger");
        if(!nav||!btn)return;
        const isOpen=nav.classList.toggle("open");
        btn.setAttribute("aria-expanded",String(isOpen));
        if(!isOpen){ nav.querySelectorAll(".menu-group.expanded").forEach(g=>g.classList.remove("expanded")); }
      }
      window.toggleNav=toggleNav;
      const isDesktop=()=>window.matchMedia("(min-width:769px)").matches;
    </script>

    <script is:inline>
      // ---- Smooth anchor scrolling
      (function(){
        function measureHeader(){
          const header = document.querySelector('header, .site-header');
          const h = header ? Math.max(52, Math.round(header.getBoundingClientRect().height)) : 52;
          document.documentElement.style.setProperty('--header-h', h + 'px');
        }
        measureHeader();
        window.addEventListener('resize', () => requestAnimationFrame(measureHeader), { passive:true });

        function smoothToHash(){
          const id = decodeURIComponent(location.hash.replace(/^#/, ''));
          if(!id) return;
          const el = document.getElementById(id);
          if(!el) return;
          requestAnimationFrame(()=> el.scrollIntoView({ behavior:'smooth', block:'start' }));
        }

        document.addEventListener('click', (e) => {
          const a = (e.target as HTMLElement).closest('a[href^="#"]') as HTMLAnchorElement | null;
          if(!a) return;
          const id = decodeURIComponent(a.getAttribute('href')!.slice(1));
          const el = document.getElementById(id);
          if(!el) return;
          e.preventDefault();
          history.pushState(null, '', '#' + id);
          el.scrollIntoView({ behavior:'smooth', block:'start' });
        }, { passive:false });

        window.addEventListener('hashchange', (e) => {
          e.preventDefault();
          smoothToHash();
        });

        if (location.hash) {
          window.addEventListener('load', () => setTimeout(smoothToHash, 60));
        }
      })();
    </script>
  </head>
  <body class={bodyClass}>
    {showHeader && (
      <header>
        <div class="nav-inner">
          <a class="brand" href="/" data-astro-prefetch>Fernie Real Estate</a>
          <button class="hamburger" onclick="toggleNav()" aria-label="Open menu" aria-expanded="false">â˜°</button>
          <nav>
            {
              NAV_ORDER.map((key)=>{
                switch(key){
                  case "neighbourhoods": return (
                    <div class="menu-group">
                      <a class="menu-link has-sub" href="/neighbourhoods" data-astro-prefetch="hover">Neighbourhoods</a>
                      {(() => {
                        const cols=colsFor(neighbourhoods.length+1); const wide=cols>1?"wide":"";
                        return (
                          <div class={`dropdown ${wide}`} style={`--cols:${cols};`}>
                            <a class="view-all" href="/neighbourhoods" data-astro-prefetch="hover">ALL NEIGHBOURHOODS</a>
                            {neighbourhoods.map(n=><a href={`/neighbourhoods/${n.slug}`} data-astro-prefetch="hover">{n.title}</a>)}
                          </div>
                        );
                      })()}
                    </div>
                  );
                  case "stay": return (
                    <div class="menu-group">
                      <a class="menu-link has-sub" href="/stay" data-astro-prefetch="hover">Stay</a>
                      <div class="dropdown" style="--cols:1;">
                        <a class="view-all" href="/stay" data-astro-prefetch="hover">ALL PLACES TO STAY</a>
                        <a href="/stay#hotels" data-astro-prefetch="hover">Hotels</a>
                        <a href="/stay#airbnb" data-astro-prefetch="hover">Airbnb</a>
                      </div>
                    </div>
                  );
                  case "types": return (
                    <div class="menu-group">
                      <a class="menu-link has-sub" href="/types" data-astro-prefetch="hover">Types</a>
                      {(() => {
                        const cols=colsFor(typesMenu.length+1); const wide=cols>1?"wide":"";
                        return (
                          <div class={`dropdown ${wide}`} style={`--cols:${cols};`}>
                            <a class="view-all" href="/types" data-astro-prefetch="hover">ALL PROPERTY TYPES</a>
                            {typesMenu.map(t=><a href={`/types/${t.slug}`} data-astro-prefetch="hover">{t.title}</a>)}
                          </div>
                        );
                      })()}
                    </div>
                  );
                  case "xtra": return (
                    <div class="menu-group">
                      <a class="menu-link has-sub" href="/xtraarea" data-astro-prefetch="hover">Other Areas</a>
                      {(() => {
                        const cols=colsFor(xtraMenu.length+1); const wide=cols>1?"wide":"";
                        return (
                          <div class={`dropdown ${wide}`} style={`--cols:${cols};`}>
                            <a class="view-all" href="/xtraarea" data-astro-prefetch="hover">ALL OTHER AREAS</a>
                            {xtraMenu.map(x=><a href={`/xtraarea/${x.slug}`} data-astro-prefetch="hover">{x.title}</a>)}
                          </div>
                        );
                      })()}
                    </div>
                  );
                  case "todo": return (
                    <div class="menu-group">
                      <a class="menu-link has-sub" href="/to_do" data-astro-prefetch="hover">To Do</a>
                      <div class="dropdown" style="--cols:1;">
                        <a class="view-all" href="/to_do" data-astro-prefetch="hover">ALL THINGS TO DO</a>
                        <a href="/to_do#summer" data-astro-prefetch="hover">Summer</a>
                        <a href="/to_do#winter" data-astro-prefetch="hover">Winter</a>
                      </div>
                    </div>
                  );
                  case "search": return (
                    <a class="menu-link" href="/search" data-astro-prefetch="hover">Search</a>
                  );
                  case "contact": return (
                    <a class="menu-link" href="/contact" data-astro-prefetch="hover">Contact</a>
                  );
                }
              })
            }
          </nav>
        </div>
      </header>
    )}
    <main><slot /></main>
    <footer class="site-footer">
      <div class="container">
        <p>&copy; {new Date().getFullYear()} Fernie Real Estate. All rights reserved.</p>
        <div class="footer-links">
          <a href="/privacy" data-astro-prefetch>Privacy Policy</a>
          <a href="/terms" data-astro-prefetch>Terms of Use</a>
          <a href="/contact" data-astro-prefetch>Contact</a>
        </div>
      </div>
    </footer>
  </body>
</html>
